{"version":3,"file":"static/js/343.b29e72bb.chunk.js","mappings":"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","sources":["config/api.ts","components/LiveTestAutomation.tsx","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["const API_BASE_URL = 'https://about-me-automation-backend.azurewebsites.net/api';\n\nexport const fetchWithErrorHandling = async (url: string) => {\n    const response = await fetch(url);\n    if (!response.ok) {\n        const text = await response.text();\n        try {\n            // Try to parse error as JSON\n            const json = JSON.parse(text);\n            throw new Error(json.message || `HTTP error! status: ${response.status}`);\n        } catch (e) {\n            // If parsing fails, use text or status\n            throw new Error(text || `HTTP error! status: ${response.status}`);\n        }\n    }\n    return response.json();\n};\n\nexport const API_ENDPOINTS = {\n    TEST_RUNS_SUMMARY: `${API_BASE_URL}/test-runs/summary`,\n    TEST_RUN_DETAILS: (id: string) => `${API_BASE_URL}/test-runs/${id}`\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { API_ENDPOINTS, fetchWithErrorHandling } from '../config/api';\n\ninterface TestRun {\n    _id: string;\n    project: string;\n    status: string;\n    startedAt: string;\n    finishedAt: string;\n    results: {\n        passed: number;\n        failed: number;\n        skipped?: number;\n        blocked?: number;\n        tests?: Array<{\n            suite: string;\n            title: string;\n            status: string;\n            browser: string;\n            duration: number;\n            error?: string;\n        }>;\n        details?: Array<{\n            suite: string;\n            tests: Array<{\n                name: string;\n                status: string;\n                browser?: string;\n                duration?: number;\n                error?: string;\n            }>;\n        }>;\n    };\n}\n\ninterface TestRunDetail extends TestRun {\n    duration: number;\n    results: TestRun['results'];\n}\n\ninterface LiveTestAutomationProps {\n    isDark: boolean;\n}\n\nconst TestAutomationSection = styled.section`\n    padding: 2rem;\n    max-width: 1200px;\n    margin: 0 auto;\n    width: 100%;\n    overflow-x: hidden;\n    box-sizing: border-box;\n\n    @media (max-width: 768px) {\n        padding: 1rem;\n    }\n`;\n\nconst TestRunList = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    min-height: 400px;\n    width: 100%;\n    overflow-x: hidden;\n    box-sizing: border-box;\n`;\n\nconst TestRunCard = styled.div<{ $isDark: boolean }>`\n    background-color: ${props => props.$isDark ? '#1f2937' : 'white'};\n    border-radius: 12px;\n    box-shadow: ${props => props.$isDark \n        ? '0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2)' \n        : '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)'};\n    border: ${props => props.$isDark ? '1px solid #374151' : '1px solid #e5e7eb'};\n    overflow: hidden;\n    transition: all 0.2s ease-in-out;\n    \n    &:hover {\n        transform: translateY(-2px);\n        box-shadow: ${props => props.$isDark \n            ? '0 10px 15px -3px rgba(0, 0, 0, 0.4), 0 4px 6px -2px rgba(0, 0, 0, 0.3)' \n            : '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)'};\n    }\n`;\n\nconst getStatusColor = (status: string, passed: number, failed: number, isDark: boolean) => {\n    if (status === 'completed' || status === 'passed') {\n        if (failed === 0 && passed > 0) return isDark ? 'rgb(20, 83, 45)' : '#27ae60'; // Green for all passed in dark mode\n        if (failed > 0 && passed > 0) return isDark ? '#b45309' : '#f39c12'; // Darker orange for dark mode\n        if (failed > 0 && passed === 0) return isDark ? '#b91c1c' : '#e74c3c'; // Darker red for dark mode\n    }\n    return isDark ? '#374151' : '#7f8c8d'; // Grey for other statuses\n};\n\nconst TestRunHeader = styled.div<{ status: string; passed: number; failed: number; $isDark: boolean }>`\n    background-color: ${props => getStatusColor(props.status, props.passed, props.failed, props.$isDark)};\n    color: white;\n    padding: 1.25rem;\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    transition: all 0.2s ease-in-out;\n    position: relative;\n    \n    &:hover {\n        opacity: 0.9;\n    }\n    \n    &:focus-visible {\n        outline: 3px solid ${props => props.$isDark ? '#60a5fa' : '#3b82f6'};\n        outline-offset: 2px;\n    }\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 0.5rem;\n        padding: 1rem;\n    }\n`;\n\nconst StatusBadge = styled.span<{ status: string; $isDark: boolean }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.375rem;\n    padding: 0.25rem 0.75rem;\n    border-radius: 9999px;\n    font-size: 0.75rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.025em;\n    min-width: 90px;\n    white-space: nowrap;\n    text-align: center;\n    box-sizing: border-box;\n    background-color: ${props => {\n        const isSuccess = props.status === 'completed' || props.status === 'passed';\n        if (props.$isDark) {\n            return isSuccess ? 'rgba(34, 197, 94, 0.2)' : 'rgba(239, 68, 68, 0.2)';\n        }\n        // Light mode: stronger background for better contrast\n        if (isSuccess) return '#d1fae5'; // emerald-100\n        if (props.status === 'failed') return '#fee2e2'; // red-100\n        return '#e5e7eb'; // gray-200 for other statuses\n    }};\n    color: ${props => {\n        const isSuccess = props.status === 'completed' || props.status === 'passed';\n        if (props.$isDark) {\n            return isSuccess ? '#10b981' : '#ef4444';\n        }\n        // Light mode: darker text for readability\n        if (isSuccess) return '#065f46'; // emerald-900\n        if (props.status === 'failed') return '#991b1b'; // red-900\n        return '#374151'; // gray-700\n    }};\n    border: 1px solid ${props => {\n        const isSuccess = props.status === 'completed' || props.status === 'passed';\n        if (props.$isDark) {\n            return isSuccess ? '#10b981' : '#ef4444';\n        }\n        // Light mode borders\n        if (isSuccess) return '#34d399'; // emerald-400\n        if (props.status === 'failed') return '#f87171'; // red-400\n        return '#9ca3af'; // gray-400\n    }};\n    \n    &::before {\n        content: '';\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n        background-color: currentColor;\n    }\n\n    @media (max-width: 768px) {\n        min-width: 80px;\n    }\n`;\n\nconst ChevronIcon = styled.span<{ isExpanded: boolean }>`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 0.75rem;\n    width: 20px;\n    height: 20px;\n    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    transform: ${props => props.isExpanded ? 'rotate(180deg)' : 'rotate(0deg)'};\n    font-size: 0.875rem;\n    border-radius: 4px;\n    background-color: rgba(255, 255, 255, 0.1);\n    \n    &:hover {\n        background-color: rgba(255, 255, 255, 0.2);\n    }\n`;\n\nconst TestRunTitleWrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst TestRunTitle = styled.h3`\n    margin: 0;\n    font-size: 1.2rem;\n\n    @media (max-width: 768px) {\n        font-size: 1rem;\n    }\n`;\n\nconst TestRunStats = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n\n    @media (max-width: 768px) {\n        flex-wrap: wrap;\n        gap: 1rem;\n    }\n`;\n\nconst StatItem = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n    padding: 0.25rem 0.75rem;\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 20px;\n    font-size: 0.875rem;\n    font-weight: 500;\n    backdrop-filter: blur(4px);\n    min-width: 210px;\n    box-sizing: border-box;\n    white-space: nowrap;\n    \n    &:first-child {\n        border: 1px solid rgba(34, 197, 94, 0.3);\n    }\n    \n    &:nth-child(2) {\n        border: 1px solid rgba(239, 68, 68, 0.3);\n    }\n    \n    @media (max-width: 768px) {\n        min-width: 180px;\n    }\n`;\n\nconst DateBadge = styled(StatItem)`\n    width: 260px;\n    font-variant-numeric: tabular-nums;\n    @media (max-width: 768px) {\n        width: 220px;\n    }\n`;\n\nconst TestRunContent = styled.div<{ isExpanded: boolean; $isDark: boolean }>`\n    background-color: ${props => props.$isDark ? '#111827' : '#f9fafb'};\n    border-top: 1px solid ${props => props.$isDark ? '#374151' : '#e5e7eb'};\n    padding: ${props => props.isExpanded ? '1.5rem' : '0'};\n    display: ${props => props.isExpanded ? 'block' : 'none'};\n\n    @media (max-width: 768px) {\n        padding: ${props => props.isExpanded ? '1rem' : '0'};\n    }\n`;\n\nconst ErrorMessage = styled.div`\n    text-align: center;\n    padding: 2rem;\n    color: #e74c3c;\n    font-size: 1.2rem;\n`;\n\nconst fadeInAnimation = keyframes`\n    0% {\n        opacity: 0;\n        transform: translateY(10px);\n    }\n    100% {\n        opacity: 1;\n        transform: translateY(0);\n    }\n`;\n\nconst fadeIn = keyframes`\n    from { opacity: 0; }\n    to { opacity: 1; }\n`;\n\nconst shimmerAnimation = keyframes`\n    0% {\n        background-position: -1200px 0;\n    }\n    100% {\n        background-position: 1200px 0;\n    }\n`;\n\nconst shimmerStyle = css<{ $isDark?: boolean }>`\n    background: linear-gradient(to right, ${props => props.$isDark ? '#23272f 8%, #374151 18%, #23272f 33%' : '#f6f7f8 8%, #edeef1 18%, #f6f7f8 33%'});\n    background-size: 2400px 100%;\n    animation: ${shimmerAnimation} 1.5s linear infinite;\n`;\n\nconst LoadingCard = styled.div<{ index: number; $isDark: boolean }>`\n    background-color: ${props => props.$isDark ? '#23272f' : 'white'};\n    border-radius: 8px;\n    box-shadow: 0 2px 4px ${props => props.$isDark ? 'rgba(0,0,0,0.5)' : 'rgba(0,0,0,0.1)'};\n    overflow: hidden;\n    opacity: 0;\n    animation: ${fadeInAnimation} 0.5s ease forwards;\n    animation-delay: ${props => props.index * 0.1}s;\n    \n    @media (max-width: 768px) {\n        height: auto;\n    }\n`;\n\nconst LoadingHeader = styled.div<{ $isDark: boolean }>`\n    height: 60px;\n    background-color: ${props => props.$isDark ? '#23272f' : '#f8f8f8'};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n    position: relative;\n\n    @media (max-width: 768px) {\n        height: auto;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 0.5rem;\n        min-height: 80px;\n    }\n`;\n\nconst LoadingTitle = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n`;\n\nconst LoadingProjectIcon = styled.div<{ $isDark: boolean }>`\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    ${shimmerStyle}\n`;\n\nconst LoadingProjectName = styled.div<{ $isDark: boolean }>`\n    width: 120px;\n    height: 20px;\n    ${shimmerStyle}\n    border-radius: 4px;\n`;\n\nconst LoadingStats = styled.div`\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n\n    @media (max-width: 768px) {\n        flex-wrap: wrap;\n        gap: 0.75rem;\n    }\n`;\n\nconst LoadingStatWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n`;\n\nconst LoadingStatIcon = styled.div<{ type: 'pass' | 'fail' | 'date'; $isDark: boolean }>`\n    width: 16px;\n    height: 16px;\n    border-radius: ${props => props.type === 'date' ? '3px' : '50%'};\n    ${shimmerStyle}\n`;\n\nconst LoadingStatValue = styled.div<{ width: string; $isDark: boolean }>`\n    width: ${props => props.width};\n    height: 16px;\n    ${shimmerStyle}\n    border-radius: 3px;\n`;\n\nconst LoadingPlaceholder = () => (\n    <TestRunList data-testid=\"loading-placeholder\">\n        {[1, 2, 3, 4, 5].map((_, index) => (\n            <LoadingCard key={index} index={index} $isDark={true}>\n                <LoadingHeader $isDark={true}>\n                    <LoadingTitle>\n                        <LoadingProjectIcon $isDark={true} />\n                        <LoadingProjectName $isDark={true} />\n                    </LoadingTitle>\n                    <LoadingStats>\n                        <LoadingStatWrapper>\n                            <LoadingStatIcon type=\"pass\" $isDark={true} />\n                            <LoadingStatValue width=\"24px\" $isDark={true} />\n                        </LoadingStatWrapper>\n                        <LoadingStatWrapper>\n                            <LoadingStatIcon type=\"fail\" $isDark={true} />\n                            <LoadingStatValue width=\"24px\" $isDark={true} />\n                        </LoadingStatWrapper>\n                        <LoadingStatWrapper>\n                            <LoadingStatIcon type=\"date\" $isDark={true} />\n                            <LoadingStatValue width=\"120px\" $isDark={true} />\n                        </LoadingStatWrapper>\n                    </LoadingStats>\n                </LoadingHeader>\n            </LoadingCard>\n        ))}\n    </TestRunList>\n);\n\nconst LoadingExpandedContent = styled.div`\n    animation: ${fadeInAnimation} 0.3s ease-in-out;\n`;\n\nconst LoadingTestSummary = styled.div<{ $isDark: boolean }>`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 1rem;\n    margin-bottom: 1rem;\n    background-color: ${props => props.$isDark ? '#23272f' : '#f8fafc'};\n    padding: 0.75rem;\n    border-radius: 6px;\n\n    @media (max-width: 768px) {\n        grid-template-columns: repeat(2, 1fr);\n        gap: 0.75rem;\n        padding: 0.75rem;\n    }\n`;\n\nconst LoadingSummaryItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n\n    @media (max-width: 768px) {\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n    }\n`;\n\nconst LoadingSummaryLabel = styled.div<{ $isDark: boolean }>`\n    height: 0.8rem;\n    width: 60%;\n    border-radius: 4px;\n    ${shimmerStyle}\n\n    @media (max-width: 768px) {\n        width: 40%;\n    }\n`;\n\nconst LoadingSummaryValue = styled.div<{ $isDark: boolean }>`\n    height: 0.9rem;\n    width: 80%;\n    border-radius: 4px;\n    ${shimmerStyle}\n\n    @media (max-width: 768px) {\n        width: 50%;\n    }\n`;\n\nconst LoadingTestDetails = styled.div`\n    margin-top: 0.5rem;\n`;\n\nconst LoadingTestSuite = styled.div<{ $isDark: boolean }>`\n    margin-bottom: 1rem;\n`;\n\nconst LoadingSuiteTitle = styled.div<{ $isDark: boolean }>`\n    height: 0.95rem;\n    width: 70%;\n    margin: 0.25rem 0;\n    border-radius: 4px;\n    ${shimmerStyle}\n`;\n\nconst LoadingTestCase = styled.div<{ $isDark: boolean }>`\n    height: 2.5rem;\n    padding: 0.5rem;\n    margin: 0.25rem 0;\n    border-radius: 4px;\n    ${shimmerStyle}\n`;\n\nconst formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        timeZoneName: 'short'\n    }).format(date);\n};\n\nconst MAX_RESULTS = 30;\nconst PAGE_SIZE = 5;\n\nconst Spinner = styled.div`\n    border: 3px solid rgba(255,255,255,0.2);\n    border-top: 3px solid #3498db;\n    border-radius: 50%;\n    width: 1.2em;\n    height: 1.2em;\n    animation: spin 0.7s linear infinite;\n    display: inline-block;\n    vertical-align: middle;\n    margin-right: 0.5em;\n\n    @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n    }\n`;\n\nconst LiveTestAutomation: React.FC<LiveTestAutomationProps> = ({ isDark }) => {\n    const [testRuns, setTestRuns] = useState<TestRun[]>([]);\n    const [expandedRuns, setExpandedRuns] = useState<{ [key: string]: TestRunDetail }>({});\n    const [loadingDetails, setLoadingDetails] = useState<{ [key: string]: boolean }>({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [hoveredError, setHoveredError] = useState<{ id: string; error: string } | null>(null);\n    const [limit, setLimit] = useState(PAGE_SIZE);\n    const [loadingMore, setLoadingMore] = useState(false);\n    const [announceText, setAnnounceText] = useState<string>('');\n    const announcementRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        fetchTestRuns(limit);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [limit]);\n\n    const announceToScreenReader = useCallback((message: string) => {\n        setAnnounceText(message);\n        setTimeout(() => setAnnounceText(''), 1000);\n    }, []);\n\n    const handleKeyDown = useCallback((event: React.KeyboardEvent, action: () => void) => {\n        if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            action();\n        }\n    }, []);\n\n    const fetchTestRuns = async (currentLimit: number) => {\n        setLoading(currentLimit === PAGE_SIZE); // Only show main loader on first load\n        setLoadingMore(currentLimit > PAGE_SIZE); // Show loading more only for subsequent loads\n        try {\n            const url = `${API_ENDPOINTS.TEST_RUNS_SUMMARY}?limit=${currentLimit}`;\n            const data = await fetchWithErrorHandling(url);\n            setTestRuns(data);\n            setError(null);\n        } catch (error: any) {\n            console.error('Fetch error details:', error);\n            setError(`Failed to load test runs: ${error.message || 'Unknown error'}`);\n        } finally {\n            setLoading(false);\n            setLoadingMore(false);\n        }\n    };\n\n    const toggleRunDetails = async (id: string) => {\n        const testRun = testRuns.find(run => run._id === id);\n        const projectName = testRun?.project || 'test run';\n        \n        if (expandedRuns[id]) {\n            const newExpandedRuns = { ...expandedRuns };\n            delete newExpandedRuns[id];\n            setExpandedRuns(newExpandedRuns);\n            announceToScreenReader(`Collapsed details for ${projectName}`);\n            return;\n        }\n\n        // Set loading state immediately\n        setLoadingDetails(prev => ({ ...prev, [id]: true }));\n        announceToScreenReader(`Loading details for ${projectName}`);\n\n        try {\n            const data = await fetchWithErrorHandling(API_ENDPOINTS.TEST_RUN_DETAILS(id));\n            setExpandedRuns(prev => ({\n                ...prev,\n                [id]: data\n            }));\n            announceToScreenReader(`Loaded details for ${projectName}. ${data.results.passed} tests passed, ${data.results.failed} tests failed.`);\n        } catch (err) {\n            const errorMessage = 'Failed to load test run details. Please try again.';\n            setError(errorMessage);\n            announceToScreenReader(errorMessage);\n        } finally {\n            setLoadingDetails(prev => {\n                const next = { ...prev };\n                delete next[id];\n                return next;\n            });\n        }\n    };\n\n    const renderLoadingExpandedContent = () => (\n        <LoadingExpandedContent>\n            <LoadingTestSummary $isDark={isDark}>\n                {Array(8).fill(null).map((_, index) => (\n                    <LoadingSummaryItem key={index}>\n                        <LoadingSummaryLabel $isDark={isDark} />\n                        <LoadingSummaryValue $isDark={isDark} />\n                    </LoadingSummaryItem>\n                ))}\n            </LoadingTestSummary>\n            <LoadingTestDetails>\n                {Array(3).fill(null).map((_, suiteIndex) => (\n                    <LoadingTestSuite key={suiteIndex} $isDark={isDark}>\n                        <LoadingSuiteTitle $isDark={isDark} />\n                        {Array(2).fill(null).map((_, caseIndex) => (\n                            <LoadingTestCase key={caseIndex} $isDark={isDark} />\n                        ))}\n                    </LoadingTestSuite>\n                ))}\n            </LoadingTestDetails>\n        </LoadingExpandedContent>\n    );\n\n    const getErrorMessage = (error: any): string => {\n        if (!error) return '';\n        if (typeof error === 'string') return error;\n        if (typeof error === 'object') {\n            if (error.message) return error.message;\n            try {\n                return JSON.stringify(error);\n            } catch {\n                return 'Unknown error';\n            }\n        }\n        return String(error);\n    };\n\n    const renderTestCase = (test: any, index: string | number, runId: string) => (\n        <TestCase key={`${runId}-${index}`} status={test.status} $isDark={isDark}>\n            <ErrorWrapper>\n                <TestInfo>\n                    <TestName\n                        status={test.status}\n                        $isDark={isDark}\n                        onMouseEnter={() => test.error && setHoveredError({\n                            id: `${runId}-${index}`,\n                            error: getErrorMessage(test.error)\n                        })}\n                        onMouseLeave={() => setHoveredError(null)}\n                    >\n                        {test.title || test.name}\n                    </TestName>\n                    <TestMeta>\n                        <TestBrowser>\n                            {test.browser === 'chromium' ? '🌐' : '📱'} {test.browser || 'chromium'}\n                        </TestBrowser>\n                        <TestDuration>{test.duration ? `${(test.duration / 1000).toFixed(2)}s` : 'N/A'}</TestDuration>\n                    </TestMeta>\n                </TestInfo>\n                {hoveredError?.id === `${runId}-${index}` && (\n                    <Tooltip>{hoveredError.error}</Tooltip>\n                )}\n            </ErrorWrapper>\n        </TestCase>\n    );\n\n    if (loading) {\n        return (\n            <TestAutomationSection \n                data-testid=\"test-automation-section-loading\"\n                role=\"main\"\n                aria-label=\"Loading test automation results\"\n                aria-busy=\"true\"\n            >\n                <VisuallyHidden \n                    data-testid=\"loading-announcement\" \n                    aria-live=\"polite\" \n                    aria-atomic=\"true\"\n                >\n                    Loading test automation results, please wait.\n                </VisuallyHidden>\n                <LoadingPlaceholder />\n            </TestAutomationSection>\n        );\n    }\n\n    if (error) {\n        return (\n            <TestAutomationSection \n                data-testid=\"test-automation-section-error\"\n                role=\"main\"\n                aria-label=\"Test automation error\"\n            >\n                <ErrorMessage \n                    data-testid=\"error-message\"\n                    role=\"alert\"\n                    aria-live=\"assertive\"\n                    tabIndex={0}\n                >\n                    {error}\n                </ErrorMessage>\n            </TestAutomationSection>\n        );\n    }\n\n    const canLoadMore = testRuns.length >= limit && limit < MAX_RESULTS;\n\n    return (\n        <TestAutomationSection \n            data-testid=\"test-automation-section\"\n            role=\"main\"\n            aria-label=\"Test Automation Results\"\n        >\n            {/* Screen reader announcements */}\n            <VisuallyHidden\n                ref={announcementRef}\n                aria-live=\"polite\"\n                aria-atomic=\"true\"\n                data-testid=\"screen-reader-announcements\"\n            >\n                {announceText}\n            </VisuallyHidden>\n\n            <TestRunList \n                data-testid=\"test-run-list\"\n                role=\"list\"\n                aria-label={`${testRuns.length} test runs available`}\n            >\n                {testRuns.map((run, index) => (\n                    <TestRunCard \n                        key={run._id} \n                        data-testid={`test-run-card-${run._id}`} \n                        $isDark={isDark}\n                        role=\"listitem\"\n                    >\n                        <TestRunHeader\n                            status={run.status}\n                            passed={run.results.passed}\n                            failed={run.results.failed}\n                            $isDark={isDark}\n                            onClick={() => toggleRunDetails(run._id)}\n                            onKeyDown={(e) => handleKeyDown(e, () => toggleRunDetails(run._id))}\n                            data-testid={`test-run-header-${run._id}`}\n                            role=\"button\"\n                            tabIndex={0}\n                            aria-expanded={!!expandedRuns[run._id] || !!loadingDetails[run._id]}\n                            aria-controls={`test-run-content-${run._id}`}\n                            aria-describedby={`test-run-stats-${run._id}`}\n                            aria-label={`${run.project} test run. ${run.results.passed} passed, ${run.results.failed} failed. ${!!expandedRuns[run._id] ? 'Expanded' : 'Collapsed'}. Press Enter or Space to toggle details.`}\n                        >\n                            <TestRunTitleWrapper>\n                                <ChevronIcon \n                                    isExpanded={!!expandedRuns[run._id] || !!loadingDetails[run._id]}\n                                    aria-hidden=\"true\"\n                                    data-testid={`chevron-icon-${run._id}`}\n                                >\n                                    ▼\n                                </ChevronIcon>\n                                <TestRunTitle data-testid={`test-run-title-${run._id}`}>\n                                    {run.project}\n                                </TestRunTitle>\n                            </TestRunTitleWrapper>\n                            <TestRunStats \n                                id={`test-run-stats-${run._id}`}\n                                data-testid={`test-run-stats-${run._id}`}\n                            >\n                                <StatusBadge \n                                    status={run.status} \n                                    $isDark={isDark}\n                                    data-testid={`status-badge-${run._id}`}\n                                    aria-label={`Status: ${run.status}`}\n                                >\n                                    {run.status}\n                                </StatusBadge>\n                                <DateBadge data-testid={`date-stat-${run._id}`} aria-label={`Started at ${formatDate(run.startedAt)}`}>\n                                    🕒 {formatDate(run.startedAt)}\n                                </DateBadge>\n                            </TestRunStats>\n                        </TestRunHeader>\n                        <TestRunContent \n                            id={`test-run-content-${run._id}`}\n                            data-testid={`test-run-content-${run._id}`}\n                            isExpanded={!!expandedRuns[run._id] || !!loadingDetails[run._id]} \n                            $isDark={isDark}\n                            role=\"region\"\n                            aria-labelledby={`test-run-title-${run._id}`}\n                            aria-hidden={!expandedRuns[run._id] && !loadingDetails[run._id]}\n                        >\n                            {loadingDetails[run._id] && (\n                                <div data-testid={`loading-details-${run._id}`} aria-label=\"Loading test details\">\n                                    {renderLoadingExpandedContent()}\n                                </div>\n                            )}\n                            {expandedRuns[run._id] && (\n                                <ExpandedContent \n                                    data-testid={`expanded-content-${run._id}`}\n                                    role=\"tabpanel\"\n                                    aria-labelledby={`test-run-title-${run._id}`}\n                                >\n                                    <TestSummary \n                                        data-testid={`test-summary-${run._id}`} \n                                        $isDark={isDark}\n                                        role=\"group\"\n                                        aria-label=\"Test run summary statistics\"\n                                    >\n                                        <SummaryItem data-testid={`duration-${run._id}`}>\n                                            <SummaryLabel>Duration</SummaryLabel>\n                                            <SummaryValue aria-label={`Total duration: ${(expandedRuns[run._id].duration / 1000).toFixed(2)} seconds`}>\n                                                {(expandedRuns[run._id].duration / 1000).toFixed(2)}s\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`success-rate-${run._id}`}>\n                                            <SummaryLabel>Success Rate</SummaryLabel>\n                                            <SummaryValue aria-label={`Success rate: ${Math.round((expandedRuns[run._id].results.passed / (expandedRuns[run._id].results.passed + expandedRuns[run._id].results.failed)) * 100)} percent`}>\n                                                {Math.round((expandedRuns[run._id].results.passed /\n                                                    (expandedRuns[run._id].results.passed + expandedRuns[run._id].results.failed)) * 100)}%\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`passed-tests-${run._id}`}>\n                                            <SummaryLabel>Passed Tests</SummaryLabel>\n                                            <SummaryValue aria-label={`${expandedRuns[run._id].results.passed} tests passed`}>\n                                                {expandedRuns[run._id].results.passed}\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`failed-tests-${run._id}`}>\n                                            <SummaryLabel>Failed Tests</SummaryLabel>\n                                            <SummaryValue aria-label={`${expandedRuns[run._id].results.failed} tests failed`}>\n                                                {expandedRuns[run._id].results.failed}\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`skipped-tests-${run._id}`}>\n                                            <SummaryLabel>Skipped Tests</SummaryLabel>\n                                            <SummaryValue aria-label={`${expandedRuns[run._id].results.skipped || 0} tests skipped`}>\n                                                {expandedRuns[run._id].results.skipped || 0}\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                        <SummaryItem data-testid={`blocked-tests-${run._id}`}>\n                                            <SummaryLabel>Blocked Tests</SummaryLabel>\n                                            <SummaryValue aria-label={`${expandedRuns[run._id].results.blocked || 0} tests blocked`}>\n                                                {expandedRuns[run._id].results.blocked || 0}\n                                            </SummaryValue>\n                                        </SummaryItem>\n                                    </TestSummary>\n                                    <TestDetails \n                                        data-testid={`test-details-${run._id}`}\n                                        role=\"group\"\n                                        aria-label=\"Individual test case results\"\n                                    >\n                                        {expandedRuns[run._id].results.tests?.map((test: any, index: number) => (\n                                            <TestSuite \n                                                data-testid={`test-suite-${run._id}-${index}`} \n                                                key={index} \n                                                $isDark={isDark}\n                                                role=\"group\"\n                                                aria-labelledby={`suite-title-${run._id}-${index}`}\n                                            >\n                                                <SuiteTitle \n                                                    id={`suite-title-${run._id}-${index}`}\n                                                    data-testid={`test-suite-title-${run._id}-${index}`} \n                                                    $isDark={isDark}\n                                                >\n                                                    {test.suite}\n                                                </SuiteTitle>\n                                                <TestCase \n                                                    status={test.status} \n                                                    $isDark={isDark}\n                                                    data-testid={`test-case-${run._id}-${index}`}\n                                                    role=\"listitem\"\n                                                    aria-label={`Test: ${test.title || test.name}. Status: ${test.status}. Browser: ${test.browser || 'chromium'}. Duration: ${test.duration ? `${(test.duration / 1000).toFixed(2)} seconds` : 'N/A'}`}\n                                                >\n                                                    <ErrorWrapper>\n                                                        <TestInfo>\n                                                            <TestName \n                                                                status={test.status} \n                                                                $isDark={isDark}\n                                                                onMouseEnter={() => test.error && setHoveredError({\n                                                                    id: `${run._id}-${index}`,\n                                                                    error: getErrorMessage(test.error)\n                                                                })}\n                                                                onMouseLeave={() => setHoveredError(null)}\n                                                                onFocus={() => test.error && setHoveredError({\n                                                                    id: `${run._id}-${index}`,\n                                                                    error: getErrorMessage(test.error)\n                                                                })}\n                                                                onBlur={() => setHoveredError(null)}\n                                                                data-testid={`test-name-${run._id}-${index}`}\n                                                                tabIndex={test.error ? 0 : -1}\n                                                                role={test.error ? \"button\" : undefined}\n                                                                aria-describedby={test.error ? `error-${run._id}-${index}` : undefined}\n                                                            >\n                                                                {test.title || test.name}\n                                                            </TestName>\n                                                            <TestMeta data-testid={`test-meta-${run._id}-${index}`}>\n                                                                <TestBrowser data-testid={`test-browser-${run._id}-${index}`}>\n                                                                    {test.browser === 'chromium' ? '🌐' : '📱'} {test.browser || 'chromium'}\n                                                                </TestBrowser>\n                                                                <TestDuration data-testid={`test-duration-${run._id}-${index}`}>\n                                                                    {test.duration ? `${(test.duration / 1000).toFixed(2)}s` : 'N/A'}\n                                                                </TestDuration>\n                                                            </TestMeta>\n                                                        </TestInfo>\n                                                        {hoveredError?.id === `${run._id}-${index}` && (\n                                                            <Tooltip \n                                                                id={`error-${run._id}-${index}`}\n                                                                data-testid={`error-tooltip-${run._id}-${index}`}\n                                                                role=\"tooltip\"\n                                                                aria-live=\"polite\"\n                                                            >\n                                                                {hoveredError.error}\n                                                            </Tooltip>\n                                                        )}\n                                                    </ErrorWrapper>\n                                                </TestCase>\n                                            </TestSuite>\n                                        ))}\n                                        {expandedRuns[run._id].results.details?.map((suite: any, suiteIndex: number) => (\n                                            <TestSuite key={`detail-${suiteIndex}`} $isDark={isDark}>\n                                                <SuiteTitle $isDark={isDark}>{suite.suite}</SuiteTitle>\n                                                {suite.tests?.map((test: any, testIndex: number) =>\n                                                    renderTestCase(test, `${suiteIndex}-${testIndex}`, run._id)\n                                                )}\n                                            </TestSuite>\n                                        ))}\n                                    </TestDetails>\n                                </ExpandedContent>\n                            )}\n                        </TestRunContent>\n                    </TestRunCard>\n                ))}\n                {(canLoadMore || loadingMore) && (\n                    <LoadMoreWrapper data-testid=\"load-more-wrapper\">\n                        <LoadMoreButton\n                            onClick={() => {\n                                setLimit(l => Math.min(l + PAGE_SIZE, MAX_RESULTS));\n                                announceToScreenReader(`Loading ${PAGE_SIZE} more test runs`);\n                            }}\n                            disabled={loadingMore}\n                            $isDark={isDark}\n                            data-testid=\"load-more-button\"\n                            aria-label={loadingMore ? 'Loading more test runs' : `Load ${PAGE_SIZE} more test runs. Currently showing ${testRuns.length} of up to ${MAX_RESULTS} results.`}\n                            aria-live=\"polite\"\n                        >\n                            {loadingMore ? (\n                                <>\n                                    <Spinner data-testid=\"load-more-spinner\" aria-hidden=\"true\" />\n                                    Loading...\n                                </>\n                            ) : (\n                                'Load more results'\n                            )}\n                        </LoadMoreButton>\n                    </LoadMoreWrapper>\n                )}\n            </TestRunList>\n        </TestAutomationSection>\n    );\n};\n\nconst ExpandedContent = styled.div`\n    margin-top: 0.5rem;\n    animation: ${fadeInAnimation} 0.3s ease-in-out;\n`;\n\nconst TestSummary = styled.div<{ $isDark: boolean }>`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 1rem;\n    margin-bottom: 1rem;\n    background-color: ${props => props.$isDark ? '#23272f' : '#f8fafc'};\n    color: ${props => props.$isDark ? '#ecf0f1' : '#2c3e50'};\n    padding: 1rem;\n    border-radius: 6px;\n\n    @media (max-width: 768px) {\n        grid-template-columns: repeat(2, 1fr);\n        gap: 0.75rem;\n        padding: 0.75rem;\n    }\n`;\n\nconst SummaryItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n\n    @media (max-width: 768px) {\n        font-size: 0.9rem;\n    }\n`;\n\nconst SummaryLabel = styled.div`\n    color: #64748b;\n    font-size: 0.9rem;\n\n    @media (max-width: 768px) {\n        font-size: 0.8rem;\n    }\n`;\n\nconst SummaryValue = styled.div`\n    font-size: 1.1rem;\n    font-weight: 500;\n\n    @media (max-width: 768px) {\n        font-size: 0.9rem;\n    }\n`;\n\nconst TestDetails = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 1rem;\n    margin-top: 1rem;\n\n    @media (max-width: 768px) {\n        grid-template-columns: 1fr;\n        gap: 0.75rem;\n    }\n`;\n\nconst TestSuite = styled.div<{ $isDark: boolean }>`\n    background-color: ${props => props.$isDark ? '#23272f' : '#f8fafc'};\n    color: ${props => props.$isDark ? '#ecf0f1' : '#2c3e50'};\n    padding: 1rem;\n    border-radius: 6px;\n\n    @media (max-width: 768px) {\n        padding: 0.75rem;\n    }\n`;\n\nconst SuiteTitle = styled.h4<{ $isDark: boolean }>`\n    color: ${props => props.$isDark ? '#f3f4f6' : '#2c3e50'};\n    margin: 0 0 0.75rem;\n    font-size: 1.1rem;\n    border-bottom: 1px solid ${props => props.$isDark ? '#374151' : '#e2e8f0'};\n    padding-bottom: 0.5rem;\n\n    @media (max-width: 768px) {\n        font-size: 1rem;\n        margin-bottom: 0.5rem;\n    }\n`;\n\nconst TestCase = styled.div<{ status: string; $isDark: boolean }>`\n    padding: 0.75rem;\n    margin: 0.5rem 0;\n    border-radius: 4px;\n    position: relative;\n    background-color: ${props => {\n        if (props.$isDark) {\n            if (props.status === 'passed') return '#14532d';\n            if (props.status === 'failed') return '#7f1d1d';\n            if (props.status === 'skipped') return '#23272f';\n            return '#23272f';\n        } else {\n            if (props.status === 'passed') return '#f0fdf4';\n            if (props.status === 'failed') return '#fef2f2';\n            if (props.status === 'skipped') return '#f8fafc';\n            return '#fff';\n        }\n    }};\n    border: 1px solid ${props => {\n        if (props.$isDark) {\n            if (props.status === 'passed') return '#22c55e';\n            if (props.status === 'failed') return '#ef4444';\n            if (props.status === 'skipped') return '#374151';\n            return '#374151';\n        } else {\n            if (props.status === 'passed') return '#86efac';\n            if (props.status === 'failed') return '#fecaca';\n            if (props.status === 'skipped') return '#e2e8f0';\n            return '#e2e8f0';\n        }\n    }};\n    color: ${props => props.$isDark ? '#ecf0f1' : '#1e293b'};\n\n    @media (max-width: 768px) {\n        padding: 0.6rem;\n        margin: 0.4rem 0;\n    }\n`;\n\nconst TestInfo = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    gap: 1rem;\n    position: relative;\n    flex-wrap: wrap;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n`;\n\nconst TestName = styled.div<{ status: string; $isDark: boolean }>`\n    font-size: 0.95rem;\n    color: ${props => props.$isDark ? '#ecf0f1' : '#1e293b'};\n    flex: 1;\n    min-width: 200px;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    cursor: ${props => props.status === 'failed' ? 'help' : 'default'};\n\n    &::before {\n        content: \"${props => props.status === 'passed' ? '✓' : props.status === 'failed' ? '✘' : ''}\";\n        color: ${props => {\n            if (props.status === 'passed') return props.$isDark ? '#22c55e' : '#16a34a';\n            if (props.status === 'failed') return props.$isDark ? '#ef4444' : '#dc2626';\n            return props.$isDark ? '#ecf0f1' : 'inherit';\n        }};\n        font-weight: bold;\n    }\n\n    @media (max-width: 768px) {\n        font-size: 0.9rem;\n    }\n`;\n\nconst TestMeta = styled.div`\n    display: flex;\n    gap: 1rem;\n    color: #64748b;\n    font-size: 0.9rem;\n    white-space: nowrap;\n    margin-left: auto;\n\n    @media (max-width: 768px) {\n        font-size: 0.85rem;\n        gap: 0.75rem;\n        margin-left: 1.5rem; // Align with the test name after the ✓/✘ icon\n    }\n`;\n\nconst TestBrowser = styled.span`\n    display: flex;\n    align-items: center;\n    gap: 0.25rem;\n`;\n\nconst TestDuration = styled.span`\n    color: #64748b;\n`;\n\nconst Tooltip = styled.div`\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    background-color: #fee2e2;\n    border: 1px solid #fecaca;\n    color: #dc2626;\n    padding: 0.75rem;\n    border-radius: 4px;\n    font-size: 0.85rem;\n    margin-top: 0.5rem;\n    z-index: 10;\n    white-space: pre-wrap;\n    width: 100%;\n    max-width: 100vw;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    animation: ${fadeIn} 0.2s ease-in-out;\n    max-height: calc(100vh - 300px); // Dynamic height based on viewport\n    overflow-y: auto;\n    overflow-x: hidden; // Prevent horizontal scroll\n    font-family: monospace; // Better for error messages\n\n    &::before {\n        content: '';\n        position: absolute;\n        top: -6px;\n        left: 16px;\n        width: 10px;\n        height: 10px;\n        background: #fee2e2;\n        border-left: 1px solid #fecaca;\n        border-top: 1px solid #fecaca;\n        transform: rotate(45deg);\n    }\n\n    @media (max-width: 768px) {\n        font-size: 0.8rem;\n        padding: 0.6rem;\n        width: 100%;\n    }\n`;\n\nconst ErrorWrapper = styled.div`\n    position: relative;\n    width: 100%;\n`;\n\nconst VisuallyHidden = styled.div`\n    position: absolute !important;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n`;\n\nconst LoadMoreWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 1rem;\n`;\n\nconst LoadMoreButton = styled.button<{ $isDark: boolean }>`\n    background-color: ${props => props.$isDark ? '#23272f' : '#f8f8f8'};\n    color: ${props => props.$isDark ? '#ecf0f1' : '#2c3e50'};\n    padding: 0.75rem 1rem;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 1rem;\n    font-weight: 500;\n\n    &:hover {\n        background-color: ${props => props.$isDark ? '#374151' : '#e2e8f0'};\n    }\n\n    &:disabled {\n        background-color: ${props => props.$isDark ? '#374151' : '#e2e8f0'};\n        cursor: not-allowed;\n    }\n`;\n\nexport default LiveTestAutomation;\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };"],"names":["API_BASE_URL","fetchWithErrorHandling","async","response","fetch","url","ok","text","json","JSON","parse","Error","message","concat","status","e","API_ENDPOINTS","TEST_RUNS_SUMMARY","TEST_RUN_DETAILS","id","TestAutomationSection","styled","section","_templateObject","_taggedTemplateLiteral","TestRunList","div","_templateObject2","TestRunCard","_templateObject3","props","$isDark","TestRunHeader","_templateObject4","getStatusColor","passed","failed","isDark","StatusBadge","span","_templateObject5","isSuccess","ChevronIcon","_templateObject6","isExpanded","TestRunTitleWrapper","_templateObject7","TestRunTitle","h3","_templateObject8","TestRunStats","_templateObject9","StatItem","_templateObject0","DateBadge","_templateObject1","TestRunContent","_templateObject10","ErrorMessage","_templateObject11","fadeInAnimation","keyframes","_templateObject12","fadeIn","_templateObject13","shimmerAnimation","_templateObject14","shimmerStyle","css","_templateObject15","LoadingCard","_templateObject16","index","LoadingHeader","_templateObject17","LoadingTitle","_templateObject18","LoadingProjectIcon","_templateObject19","LoadingProjectName","_templateObject20","LoadingStats","_templateObject21","LoadingStatWrapper","_templateObject22","LoadingStatIcon","_templateObject23","type","LoadingStatValue","_templateObject24","width","LoadingPlaceholder","_jsx","children","map","_","_jsxs","LoadingExpandedContent","_templateObject25","LoadingTestSummary","_templateObject26","LoadingSummaryItem","_templateObject27","LoadingSummaryLabel","_templateObject28","LoadingSummaryValue","_templateObject29","LoadingTestDetails","_templateObject30","LoadingTestSuite","_templateObject31","LoadingSuiteTitle","_templateObject32","LoadingTestCase","_templateObject33","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZoneName","format","Spinner","_templateObject34","ExpandedContent","_templateObject35","TestSummary","_templateObject36","SummaryItem","_templateObject37","SummaryLabel","_templateObject38","SummaryValue","_templateObject39","TestDetails","_templateObject40","TestSuite","_templateObject41","SuiteTitle","h4","_templateObject42","TestCase","_templateObject43","TestInfo","_templateObject44","TestName","_templateObject45","TestMeta","_templateObject46","TestBrowser","_templateObject47","TestDuration","_templateObject48","Tooltip","_templateObject49","ErrorWrapper","_templateObject50","VisuallyHidden","_templateObject51","LoadMoreWrapper","_templateObject52","LoadMoreButton","button","_templateObject53","_ref","testRuns","setTestRuns","useState","expandedRuns","setExpandedRuns","loadingDetails","setLoadingDetails","loading","setLoading","error","setError","hoveredError","setHoveredError","limit","setLimit","loadingMore","setLoadingMore","announceText","setAnnounceText","announcementRef","useRef","useEffect","fetchTestRuns","announceToScreenReader","useCallback","setTimeout","handleKeyDown","event","action","key","preventDefault","currentLimit","data","console","toggleRunDetails","testRun","find","run","_id","projectName","project","newExpandedRuns","_objectSpread","prev","results","err","errorMessage","next","getErrorMessage","stringify","_unused","String","role","tabIndex","canLoadMore","length","ref","_expandedRuns$run$_id","_expandedRuns$run$_id2","onClick","onKeyDown","startedAt","Array","fill","suiteIndex","caseIndex","duration","toFixed","Math","round","skipped","blocked","tests","test","suite","title","name","browser","onMouseEnter","onMouseLeave","onFocus","onBlur","undefined","details","_suite$tests","testIndex","renderTestCase","runId","l","min","disabled","_Fragment","_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","toPrimitive","call","TypeError","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}