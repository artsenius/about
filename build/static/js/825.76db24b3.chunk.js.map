{"version":3,"file":"static/js/825.76db24b3.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Contact.tsx"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst ContactSection = styled.section`\n    padding: 2rem;\n    max-width: 800px;\n    margin: 0 auto;\n\n    @media (max-width: 768px) {\n        padding: 1rem;\n    }\n`;\n\nconst Content = styled.div`\n    font-size: 1.1rem;\n    line-height: 1.6;\n    margin-bottom: 2rem;\n\n    @media (max-width: 768px) {\n        font-size: 1rem;\n        line-height: 1.5;\n    }\n`;\n\nconst ContactGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, minmax(250px, 1fr));\n    gap: 2rem;\n    margin-top: 2rem;\n    justify-content: center;\n\n    @media (max-width: 1024px) {\n        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    }\n`;\n\nconst ContactCard = styled.div<{ $isDark: boolean }>`\n    background-color: ${props => props.$isDark ? '#2d2d2d' : 'white'};\n    color: ${props => props.$isDark ? '#ecf0f1' : '#2c3e50'};\n    padding: 2rem;\n    border-radius: 8px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    text-align: center;\n    transition: background-color 0.2s, color 0.2s;\n\n    &:hover {\n        transform: translateY(-5px);\n    }\n`;\n\nconst ContactIcon = styled.div`\n    font-size: 2rem;\n    margin-bottom: 1rem;\n    color: #2c3e50;\n`;\n\nconst ContactLabel = styled.h3<{ $isDark: boolean }>`\n    color: ${props => props.$isDark ? '#ecf0f1' : '#34495e'};\n    margin-bottom: 0.5rem;\n    transition: color 0.3s;\n`;\n\nconst ContactLink = styled.a<{ $isDark: boolean }>`\n    color: ${props => props.$isDark ? '#ecf0f1' : '#2c3e50'};\n    text-decoration: none;\n    font-size: 1.1rem;\n    display: block;\n    margin-top: 1rem;\n    transition: color 0.2s;\n\n    &:hover {\n        color: #3498db;\n    }\n`;\n\nconst CopyButton = styled.button`\n    background-color: #2c3e50;\n    color: white;\n    border: none;\n    padding: 0.5rem 1rem;\n    border-radius: 4px;\n    margin-top: 1rem;\n    cursor: pointer;\n    transition: background-color 0.2s;\n\n    &:hover {\n        background-color: #34495e;\n    }\n`;\n\nconst CopyMessage = styled.div<{ visible: boolean }>`\n    color: #27ae60;\n    font-size: 0.9rem;\n    margin-top: 0.5rem;\n    opacity: ${props => props.visible ? 1 : 0};\n    transition: opacity 0.2s;\n`;\n\ninterface ContactProps {\n    isDark: boolean;\n}\n\nconst Contact: React.FC<ContactProps> = ({ isDark }) => {\n    const [copyMessages, setCopyMessages] = useState({\n        email: false,\n        phone: false,\n        linkedin: false\n    });\n\n    const contactInfo = {\n        email: 'arthursenko@gmail.com',\n        phone: '(562) 338-9597',\n        linkedin: 'https://www.linkedin.com/in/arthur-senko/'\n    };\n\n    const handleCopy = async (text: string, type: 'email' | 'phone' | 'linkedin') => {\n        await navigator.clipboard.writeText(text);\n        setCopyMessages(prev => ({ ...prev, [type]: true }));\n        setTimeout(() => {\n            setCopyMessages(prev => ({ ...prev, [type]: false }));\n        }, 2000);\n    };\n\n    return (\n        <ContactSection data-testid=\"contact-section\">\n            <Content>\n                <ContactGrid data-testid=\"contact-grid\">\n                    <ContactCard \n                        data-testid=\"contact-card-email\" \n                        $isDark={isDark}\n                        role=\"group\"\n                        aria-labelledby=\"email-label\"\n                    >\n                        <ContactIcon data-testid=\"contact-icon-email\" aria-hidden=\"true\">📧</ContactIcon>\n                        <ContactLabel \n                            data-testid=\"contact-label-email\" \n                            $isDark={isDark}\n                            id=\"email-label\"\n                        >\n                            Email\n                        </ContactLabel>\n                        <ContactLink\n                            data-testid=\"contact-link-email\"\n                            href={`mailto:${contactInfo.email}`}\n                            $isDark={isDark}\n                            aria-label={`Send email to ${contactInfo.email}`}\n                        >\n                            {contactInfo.email}\n                        </ContactLink>\n                        <CopyButton\n                            data-testid=\"copy-button-email\"\n                            onClick={() => handleCopy(contactInfo.email, 'email')}\n                            aria-label={`Copy email address ${contactInfo.email} to clipboard`}\n                        >\n                            Copy Email\n                        </CopyButton>\n                        <CopyMessage\n                            data-testid=\"copy-message-email\"\n                            visible={copyMessages.email}\n                            role=\"status\"\n                            aria-live=\"polite\"\n                        >\n                            Copied!\n                        </CopyMessage>\n                    </ContactCard>\n\n                    <ContactCard data-testid=\"contact-card-phone\" $isDark={isDark}>\n                        <ContactIcon data-testid=\"contact-icon-phone\">📱</ContactIcon>\n                        <ContactLabel data-testid=\"contact-label-phone\" $isDark={isDark}>Phone</ContactLabel>\n                        <ContactLink\n                            data-testid=\"contact-link-phone\"\n                            href={`tel:${contactInfo.phone}`}\n                            $isDark={isDark}\n                        >\n                            {contactInfo.phone}\n                        </ContactLink>\n                        <CopyButton\n                            data-testid=\"copy-button-phone\"\n                            onClick={() => handleCopy(contactInfo.phone, 'phone')}\n                        >\n                            Copy Phone\n                        </CopyButton>\n                        <CopyMessage\n                            data-testid=\"copy-message-phone\"\n                            visible={copyMessages.phone}\n                        >\n                            Copied!\n                        </CopyMessage>\n                    </ContactCard>\n\n                    <ContactCard data-testid=\"contact-card-linkedin\" $isDark={isDark}>\n                        <ContactIcon data-testid=\"contact-icon-linkedin\">💼</ContactIcon>\n                        <ContactLabel data-testid=\"contact-label-linkedin\" $isDark={isDark}>LinkedIn</ContactLabel>\n                        <ContactLink\n                            data-testid=\"contact-link-linkedin\"\n                            href={contactInfo.linkedin}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            $isDark={isDark}\n                        >\n                            View Profile\n                        </ContactLink>\n                        <CopyButton\n                            data-testid=\"copy-button-linkedin\"\n                            onClick={() => handleCopy(contactInfo.linkedin, 'linkedin')}\n                        >\n                            Copy Profile URL\n                        </CopyButton>\n                        <CopyMessage\n                            data-testid=\"copy-message-linkedin\"\n                            visible={copyMessages.linkedin}\n                        >\n                            Copied!\n                        </CopyMessage>\n                    </ContactCard>\n                </ContactGrid>\n            </Content>\n        </ContactSection>\n    );\n};\n\nexport default Contact;"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","ContactSection","styled","section","_templateObject","_taggedTemplateLiteral","Content","div","_templateObject2","ContactGrid","_templateObject3","ContactCard","_templateObject4","props","$isDark","ContactIcon","_templateObject5","ContactLabel","h3","_templateObject6","ContactLink","a","_templateObject7","CopyButton","button","_templateObject8","CopyMessage","_templateObject9","visible","_ref","isDark","copyMessages","setCopyMessages","useState","email","phone","linkedin","contactInfo","handleCopy","async","text","type","navigator","clipboard","writeText","prev","_objectSpread","setTimeout","_jsx","children","_jsxs","role","id","href","concat","onClick","target","rel"],"sourceRoot":""}